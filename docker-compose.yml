version: '3'
services:
  app:
    image: yoonnsshop:latest
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "8080:8080"
    volumes:
      - ./src/main/resources:/app/config
    environment:
      - SPRING_PROFILES_ACTIVE=${SPRING_PROFILES_ACTIVE}
      - JWT_SECRET=${JWT_SECRET}
      - GOOGLE_CLIENT_ID=${GOOGLE_CLIENT_ID}
      - GOOGLE_CLIENT_SECRET=${GOOGLE_CLIENT_SECRET}
    depends_on:
      - db
    networks:
      - app-network

  db:
    image: mysql:latest
#    restart: on-failure
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_DATABASE: shop
    deploy:
      resources:
        limits:
#          memory: 500MB
          cpus: '1'
#    memswap_limit: 500MB
    volumes:
      - ./db/mysql-data:/var/lib/mysql
      - ./db/my.cnf:/etc/mysql/conf.d/my.cnf
    ports:
      - "3306:3306"
    networks:
      - app-network

  redis:
    image: redis
    restart: always
    ports:
      - 6379:6379
    volumes:
      - .db/redis_data:/data
    environment:
      - REDIS_PASSWORD=${REDIS_PASSWORD}
      - REDIS_DATABASE=0
    networks:
      - app-network

  prometheus:
    image: prom/prometheus
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/usr/share/prometheus/console_libraries'
      - '--web.console.templates=/usr/share/prometheus/consoles'
    ports:
      - 9090:9090
    environment:
      - HOST_IP=${HOST_IP:-host.docker.internal}
    networks:
      - app-network
    depends_on:
      - cadvisor

  grafana:
    image: grafana/grafana
    ports:
      - "3001:3000"
    environment:
      - GF_SECURITY_ADMIN_USER=${GF_SECURITY_ADMIN_USER}
      - GF_SECURITY_ADMIN_PASSWORD=${GF_SECURITY_ADMIN_PASSWORD}
      - GF_SERVER_HTTP_PORT=${GF_SERVER_HTTP_PORT}
    volumes:
      - grafana_data:/var/lib/grafana
    networks:
      - app-network

  cadvisor:
    image: gcr.io/cadvisor/cadvisor:latest
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:ro
      - /sys:/sys:ro
      - /var/lib/docker/:/var/lib/docker:ro
    security_opt:
      - no-new-privileges:true
    ports:
      - 8088:8080
    networks:
      - app-network
    command:
      - --docker_only
      - --disable_metrics=disk,cpu,network
      - --housekeeping_interval=10s


volumes:
  grafana_data:

networks:
  app-network:
    driver: bridge
